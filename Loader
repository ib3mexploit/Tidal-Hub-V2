local plr = game.Players.LocalPlayer
local OSTime = os.time()
local Time = os.date('!*t', OSTime)
local Key = getgenv().TidalKey or 'default-build'
local hwidlist = loadstring(game:HttpGet(('https://raw.githubusercontent.com/eshoradecagar/eshoradecagar/main/access')))()
local HWID = game:GetService('RbxAnalyticsService'):GetClientId()

local function getexploit()
    local exploit =
        (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X") or 
        (isexecutorclosure and "Script-Ware V2") or
        (secure_load and "Sentinel") or
        (is_sirhurt_closure and "SirHurt V4") or
        (pebc_execute and "ProtoSmasher") or
        (KRNL_LOADED and "Krnl") or
        (WrapGlobal and "WeAreDevs") or
        (isvm and "Proxo") or
        (shadow_env and "Shadow") or
        (jit and "EasyExploits") or
        (getreg()['CalamariLuaEnv'] and "Calamari") or
        (unit and "Unit") or
        ("Undetectable")
    return exploit
end

-- REPORTS USER TO SYSTEM IF NOT HWID VALIDATED
if hwidlist[HWID] == nil then
    local Content = nil
    local Embed = {
			["title"] = "__**Tidal Hub V2 Failed Execution**__",
			["description"] = "Name: "..plr.Name.."\nExploit: "..getexploit().."\nGame: https://www.roblox.com/games/"..game.PlaceId,
			["type"] = "rich",
			["color"] = tonumber(0xff0000),
	                ["thumbnail"] = {
				["url"] = nil
			},
			["image"] = {
				["url"] = nil
			},
			["fields"] = {
				{
					["name"] = "__Error Message__",
					["value"] = 'User is not currently subscribed to Tidal Hub V2.',
					["inline"] = false
				},
				{
					["name"] = "__User ID:__",
					["value"] = plr.UserId,
					["inline"] = true
				},
				{
					["name"] = "__Hardware ID:__",
					["value"] = game:GetService('RbxAnalyticsService'):GetClientId(),
					["inline"] = true
				},
				{
					["name"] = "__Key:__",
					["value"] = Key,
					["inline"] = true
				}
			},
			["footer"] = {
			    ["text"] = "Tidal Hub V2 Premium",
			    ["icon_url"] = "https://i.imgur.com/Vz2XUGj.jpg"
			},
			["timestamp"] = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
};
(syn and syn.request or http_request or http.request) {
    Url = 'https://discord.com/api/webhooks/1049609776369254480/DXGE7OYrFwQmM-EsaQSst7Wr9hPGaPvtaSCNYfJnAP1bUjNzaJEgjC8txkQeU-sGRV5c';
    Method = 'POST';
    Headers = {
        ['Content-Type'] = 'application/json';
    };
    Body = game:GetService'HttpService':JSONEncode({content = Content; embeds = {Embed}; });
};
    game.Players.LocalPlayer:Kick('man get yo goofy ass off my script bruh :skull:')
    return
end

